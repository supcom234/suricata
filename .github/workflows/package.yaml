name: Package Suricata
run-name: ${{github.actor}} is building the Suricata Zarf Package
on:
  workflow_call:
    inputs:
      BRANCH_NAME:
        required: true
        type: string
      ZARF_PACKAGE:
        required: true
        type: string
      BB_MIN_PACKAGE:
        required: true
        type: string

env:
  ZARF_S3_PATH: "s3://${{ secrets.AWS_BUCKET }}/${{ github.repository }}/${{ github.head_ref || github.ref_name }}"
  BB_MIN_S3_PATH: "s3://${{ secrets.AWS_BUCKET }}/naps-dev/dco-foundation/main"
  BRANCH_NAME: "${{ inputs.BRANCH_NAME }}"

jobs:
  package-create:
    runs-on: [self-hosted, onprem]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Zarf
        uses: defenseunicorns/setup-zarf@main
        with:
          version: v0.25.0
          download-init-package: true

      - name: Create Zarf Package
        run: |
          if [ -d "./tmp" ]; then
            rm -rf ./tmp
          fi
          mkdir tmp
          zarf package create \
            --set BRANCH="${{ env.BRANCH_NAME }}" \
            --confirm \
            --tmpdir $PWD/tmp \
            --skip-sbom
          rm -rf ./tmp

      - name: Configure AWS S3 Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{secrets.AWS_ROLE}}
          role-session-name: arkime-s3
          aws-region: us-east-1

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19.5'
          cache: true

      # skip this when running onprem
      # - name: Ensure k3d is present
      #   uses: nolar/setup-k3d-k3s@v1
      #   with:
      #     skip-creation: true    

      - name: Pull BB minimal package needed for testing
        run: |
          aws s3 cp --no-progress "${{ env.BB_MIN_S3_PATH }}/${{ inputs.BB_MIN_PACKAGE }}" "${{ inputs.BB_MIN_PACKAGE }}"

      - name: Install dependencies for terratest
        run: |
          go get -t ./...

      - name: Run component test
        working-directory: ./test
        run: |
          go test
    
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://avatars.githubusercontent.com/u/87975021?s=200&v=4
          SLACK_USERNAME: GitHub
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Publish to S3
        run: |
          aws s3 cp --no-progress "${{ inputs.ZARF_PACKAGE }}" "${{ env.ZARF_S3_PATH }}/${{ inputs.ZARF_PACKAGE }}"
