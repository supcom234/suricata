apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    component: suricata
spec:
  selector:
    matchLabels:
      component: suricata
  template:
    metadata:
      labels:
        component: suricata
    spec:
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: suricata
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        # command:
        # - "/bin/bash"
        # - "-c"
        # - "sleep 500000"
        securityContext:
          capabilities: # Required to allow Suricata to function
            add:
              - NET_ADMIN
              - NET_RAW
              - SYS_NICE
        volumeMounts:
        - name: pcaps
          mountPath: /nsm_pcaps
          readOnly: false
        - name: rules
          mountPath: /var/lib/suricata/rules
          readOnly: false
        - name: logs
          mountPath: /var/log/suricata
          readOnly: false
        - name: configs
          mountPath: /etc/suricata/suricata.yaml
          subPath: suricata.yaml
        - name: logrotate-configs
          mountPath: /etc/logrotate.d/suricata
          subPath: suricata
        args: ["-i", "{{ .Values.interface }}", "--set", "stream.memcap=16gb"]
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sleep 30; logrotate -vf /etc/logrotate.d/suricata"]
      volumes:
      - name: rules
        hostPath: 
          path: {{ .Values.suricata_rules_path }}
          type: DirectoryOrCreate
      - name: logs
        hostPath:
          path: {{ .Values.suricata_log_path }}
          type: DirectoryOrCreate
      - name: pcaps
        hostPath:
          path: {{ .Values.suricata_pcap_path }}
          type: DirectoryOrCreate
      - name: configs
        configMap:
          name: {{ .Release.Name }}
      - name: logrotate-configs
        configMap:
          name: {{ .Release.Name }}-logrotate      
      affinity:
        podAntiAffinity: # Do not allow more than one per host
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - suricata
            topologyKey: "kubernetes.io/hostname"
        nodeAffinity: # Specify a specific target node
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.node_label }}
                operator: In
                values:
                  - {{ .Values.node_label_value }}
