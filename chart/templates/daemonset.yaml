apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}
  labels:
    component: suricata
spec:
  selector:
    matchLabels:
      component: suricata
  template:
    metadata:
      labels:
        component: suricata
    spec:
      nodeSelector:
        cnaps.io/suricata-capture: "true"
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: "cnaps.io/node-taint"
        operator: "Equal"
        value: "noncore"
        effect: "NoSchedule"
      hostNetwork: true
      containers:
      - name: suricata
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          capabilities: # Required to allow Suricata to function
            add:
              - NET_ADMIN
              - NET_RAW
              - SYS_NICE
        volumeMounts:
        - name: logs
          mountPath: /var/log/suricata
        - name: configs
          mountPath: /opt/suricata/suricata.yaml
          subPath: suricata.yaml
        - name: logrotate-configs
          mountPath: /etc/logrotate.d/suricata
          subPath: suricata
{{- range $rule_file_name, $rules := .Values.rule_files }}
        - name: rules-{{ $rule_file_name }}
          mountPath: /usr/local/etc/suricata/rules
          subPath: {{ $rule_file_name }}
{{- end }}
        # args: ['-c', '/opt/suricata/suricata.yaml', "-i", "{{ .Values.capture_interface }}"]
        args: ["-i", "{{ .Values.capture_interface }}", "--set", "stream.memcap=16gb"]
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sleep 60; logrotate -vf /etc/logrotate.d/suricata"]
      volumes:
      - name: logs
        hostPath:
          path: {{ .Values.suricata_log_path }}
          type: DirectoryOrCreate
      - name: configs
        configMap:
          name: {{ .Release.Name }}
      - name: logrotate-configs
        configMap:
          name: {{ .Release.Name }}-logrotate
{{- range $rule_file_name, $rules := .Values.rule_files }}
      - name: rules-{{ $rule_file_name }}
        configMap:
          name: {{ $.Release.Name }}-rules-{{ $rule_file_name }}
{{- end }}
